name: 下载

on:
  workflow_dispatch:
  schedule:
    - cron: 0 4 * * * 
jobs:
  download_icons:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Create folders
        run: |
          mkdir -p icons
          mkdir -p rules

      - name: Download icons
        run: |
          urls=(
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Airport.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png"
            "https://raw.githubusercontent.com/shindgewongxj/WHATSINStash/main/icon/anthropic.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png"
            "https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/softlyx/PikPak.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Mickey.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Area.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Amazon.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Reject.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/CN.png"
            "https://raw.githubusercontent.com/shindgewongxj/WHATSINStash/main/icon/apple.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ForeignMedia.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png"
            "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/IEPL.png"
            
          )
          for url in "${urls[@]}"; do
            filename=$(basename "$url")
            echo "Downloading $url -> icons/$filename"
            curl -L "$url" -o "icons/$filename" || echo "Failed: $url"
          done

      - name: Download rules
        run: |
          curl -sSL "https://nsfw-small.oisd.nl" | sed -e '/^[![]/d' -e '/^\s*$/d' -e 's/||\(.*\)\^/  - '\''+.\1'\''/g' | sed '1i payload:' > rules/oisd_nsfw_small.yaml
          { curl -sSL "https://ruleset.skk.moe/Clash/ip/china_ip.txt"; curl -sSL "https://ruleset.skk.moe/Clash/ip/china_ip_ipv6.txt"; } | grep -v -e '^#' -e '^$' > rules/china_ip.txt
          curl -sSL "https://ruleset.skk.moe/Clash/non_ip/apple_cn.txt" | sed -e '/^\s*#/d' -e '/^\s*$/d' -e "s/^/  - /" | sed "1i payload:" > rules/apple_cn.yaml
          curl -sSL "https://raw.githubusercontent.com/uselibrary/PCDN/main/pcdn.list" | sed -e '/^\s*#/d' -e '/^\s*$/d' -e "s/^/  - /" | sed "1i payload:" > rules/pcdn.yaml
          curl -sSL "https://raw.githubusercontent.com/Sereinfy/Clash/main/rules/pikpak.list" | sed -e '/^\s*#/d' -e '/^\s*$/d' -e "s/^/  - /" | sed "1i payload:" > rules/pikpak.yaml 
          curl -sSL "https://raw.githubusercontent.com/Sereinfy/Adrules/main/rules/adblockmihomolite.yaml" | sed -e '/^\s*#/d' -e '/^\s*$/d' > rules/adblock_lite.yaml
          curl -sSL "https://raw.githubusercontent.com/Loyalsoldier/geoip/release/clash/ipcidr/fastly.txt" | sed -e '/^payload:/d' -e "s/^  - '\(.*\)'$/\1/" > rules/fastly_ip.txt
          curl -sSL "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt" | sed -e '/^payload:/d' -e "s/^  - '\(.*\)'$/\1/" > rules/telegram_ip.txt


      - name: Download rules (remote URLs)
        run: |
          urls=(

             #LM-Firefly classical
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Domestic.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Apple.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Microsoft.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/PROXY/Facebook.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/PROXY/Cloudflare.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Global-Services/YouTube.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/Game.yaml"
            "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/GlobalMedia.yaml"       
            # Loyalsoldier
            "apple_cdn.yaml|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt"
            "google_cn.yaml|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt"
            "gfw.yaml|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt"
            "applications.yaml|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt"

            # blackmatrix7
            "Lan|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan_No_Resolve.yaml"
            "Google|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google_No_Resolve.yaml"
            "GitHub|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub_No_Resolve.yaml"
            "Twitter|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter_No_Resolve.yaml"
            "PT|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrivateTracker/PrivateTracker_No_Resolve.yaml"
            "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global_Domain.yaml"

            # Sereinfy
            "cloudfront_ip|https://raw.githubusercontent.com/Sereinfy/ipranges/main/amazon/cloudfront_ips.txt"
            "akamai_ip|https://raw.githubusercontent.com/Sereinfy/ipranges/main/akamai/ipv4_merged.txt"

            # Other
            "cloudflare_ip|https://raw.githubusercontent.com/sbwml/luci-app-mosdns/v5/luci-app-mosdns/root/etc/mosdns/rule/cloudflare-cidr.txt"   
          )

          for item in "${urls[@]}"; do
            if [[ "$item" == *"|"* ]]; then
              # 有自定义名称
              name="${item%%|*}"   # | 前部分
              url="${item#*|}"     # | 后部分

              # 判断 name 是否已经带扩展名
              if [[ "$name" == *.* ]]; then
                filename="$name"
              else
                ext="${url##*.}"   # 从 URL 提取扩展名
                filename="$name.$ext"
              fi
            else
              # 直接用 URL 的文件名
              url="$item"
              filename=$(basename "$url")
            fi

            echo "Downloading $url -> rules/$filename"
            curl -L -f -o "rules/$filename" "$url" || echo "Failed: $url"
          done

      - name: other to yaml
        run: |
          urls=(

            "ai.yaml|https://raw.githubusercontent.com/DustinWin/ruleset_geodata/mihomo-ruleset/ai.list"
            "fake_ip_filter.yaml|https://raw.githubusercontent.com/juewuy/ShellCrash/dev/public/fake_ip_filter.list"
            "cdn_domainset.yaml|https://ruleset.skk.moe/Clash/domainset/cdn.txt"
            "speedtest.yaml|https://ruleset.skk.moe/Clash/domainset/speedtest.txt"
          )

          for item in "${urls[@]}"; do
            if [[ "$item" == *"|"* ]]; then
              # 有自定义名称
              name="${item%%|*}"   # | 前部分
              url="${item#*|}"     # | 后部分

              # 判断 name 是否已经带扩展名
              if [[ "$name" == *.* ]]; then
                filename="$name"
              else
                ext="${url##*.}"   # 从 URL 提取扩展名
                filename="$name.$ext"
              fi
            else
              # 直接用 URL 的文件名
              url="$item"
              filename=$(basename "$url")
            fi

            echo "Downloading $url -> rules/$filename"
            if ! curl -sSL "$url" | sed -e '/^\s*#/d' -e '/^\s*$/d' -e "s/^/  - '/; s/$/'/" | sed "1i payload:" > "rules/$filename"; then echo "Failed: $url"; fi
          done

      - name: Download and unzip `mihomo` core
        run: |
          mkdir -p tools
          curl -L https://github.com/DustinWin/proxy-tools/releases/download/mihomo/mihomo-meta-linux-amd64v3.tar.gz | tar -zx -C tools/
          mv -f tools/CrashCore tools/mihomo

      - name: Generate `mihomo` rule-set (mrs)
        run: |
          chmod +x tools/mihomo
          tools/mihomo convert-ruleset domain yaml rules/oisd_nsfw_small.yaml rules/oisd_nsfw_small.mrs
          tools/mihomo convert-ruleset domain yaml rules/Global_Domain.yaml rules/Global_Domain.mrs
          rm -rf tools/

          
      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add rules
            git add icons
            git commit -m "Automatic update"
            git push
          else
            echo "No changes detected, skipping commit."
          fi
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
